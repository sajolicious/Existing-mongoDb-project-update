const { MongoClient } = require('mongodb')

const uri = 'mongodb+srv://sajol:K0S3eCZ9R6QXRHnO@cluster0.sngd13i.mongodb.net/'
const dbName = 'mvp2'

async function main() {
  const client = new MongoClient(uri, {
    useNewUrlParser: true,
    useUnifiedTopology: true,
  })

  try {
    await client.connect()
    console.log('Connected to MongoDB')
    const db = client.db(dbName)
    const collection = db.collection('master_asin_upc')

    const asinsToSetN = [
      '1616615567',
      '1947494503',
      '1734511567',
      '1616612177',
      '1399600915',
      '9553548326',
      '1734511567',
      '1616615567',
      'B005R307AS',
      '9553548326',
      '1616612177',
      'B00846RTEM',
      '1947494503',
      '1399600915',
      'B018U1FSPW',
      '7999860697',
      '1912743469',
      '1797210718',
      '1734258799',
      '1734258764',
      '9189143078',
      '2382882549',
      '2019462907',
      '1974711226',
      '1957311177',
      '1946231517',
      '1936781921',
      '1408358549',
      '9189143485',
      '1913330036',
      '1913076547',
      '1912743728',
      '1912743450',
      '1912743299',
      '1912743264',
      '1910132926',
      '1910132896',
      '1849674418',
      '1734258772',
      '1640782370',
      '1640781773',
      '1638841365',
      '1118877160',
      '9189143493',
      '9189143388',
      '9189143256',
      '9188805972',
      '3869931124',
      '3473492841',
      '3473492809',
      '1974724182',
      '1913569063',
      '1788268008',
      '1734258780',
      '1640782672',
      '1544518862',
      '1472855515',
      '1401290965',
      '1401288073',
      '6040194294',
      '6040194286',
      '1633443450',
      '1613171757',
      '1613171706',
      '1472819322',
      '1421579154',
      '1406379719',
      '9188805530',
      '8413927331',
      '4757419481',
      '1950783782',
      '1941816088',
      '1912743116',
      '1911281984',
      '1910132934',
      '1839063629',
      '1838857664',
      '1802810404',
      '1640783911',
      '1640782702',
      '1640782079',
      '1638841381',
      '1638840075',
      '1601256825',
      '1568823347',
      '1509895531',
      '9189143051',
      '1941816800',
      '1912743744',
      '1912743256',
      '1839065680',
      '1804571784',
      '1118877160',
      '6040194286',
      '3869931124',
      '1544518862',
      '1912743744',
      '4757419481',
      '2019462907',
      '3473492841',
      '1838857664',
      '1839063629',
      '3473492809',
      '1640782672',
      '1912743728',
      '1472855515',
      '1912743116',
      '1957311177',
      '8413927331',
      '1640783911',
      '1613171706',
      '9189143388',
      '1640782079',
      '9189143256',
      '1911281984',
      '1974724182',
      '1941816800',
      '1913076547',
      '1912743450',
      '1839065680',
      '1912743469',
      '1406379719',
      '1633443450',
      '1912743264',
      '1910132934',
      '1734258799',
      '1910132896',
      '1401288073',
      '9188805530',
      '1472819322',
      '1946231517',
      '6040194294',
      '1849674418',
      '1910132926',
      '1509895531',
      '1912743299',
      '1788268008',
      '1734258780',
      '2382882549',
      '1613171757',
      '1568823347',
      '1941816088',
      '1936781921',
      '1802810404',
      '1638841365',
      '1913569063',
      '1950783782',
      '1601256825',
      '1401290965',
      '1974711226',
      '1640781773',
      '1912743256',
      '9188805972',
      '1408358549',
      '1913330036',
      '9189143078',
      '1734258772',
      '1638840075',
      '1640782370',
      '1640782702',
      '1797210718',
      '9189143051',
      '1421579154',
      '1734258764',
      '9189143485',
      '1638841381',
      '9189143493',
      '1804571784',
      'B007C5MP5Y',
      'B005R307AS',
      '6317778116',
      '1934347167',
      '1928660258',
      '6317711429',
      '6317587043',
      '1559409037',
      '3937045767',
      '6317699704',
      '6305428549',
      '1606610228',
      '9626342889',
      '9123633166',
      '6317837090',
      '3958601219',
      '1598032216',
      '6040415487',
      '1904859518',
      '6305058903',
      '9089702652',
      '6317790825',
      '6317642141',
      '6317799938',
      '3848870517',
      '6317659311',
      '6305428034',
      '6305428352',
      '6317790418',
      '9051595441',
      '5819907051',
      '3958600808',
      '1434766276',
      '3946274145',
      '6317632626',
      '1847111807',
      '6317641765',
      '6305133409',
      '9089701036',
      '1558908846',
      '6317704341',
      '6317717435',
      '9089702571',
      '3937045988',
      '1846090865',
      '6305999872',
      '6317635560',
      '6305120021',
      '6317592748',
      '1419855123',
      '1903276543',
      '1905523793',
      '1681435446',
      '3958601057',
      '6305262268',
      '6305213283',
      '9051594747',
      '7884412918',
      '6305342806',
      '1593285256',
      '1594398747',
      '1594390517',
      '1862093105',
      '6317790140',
      '3865385818',
      '6317759790',
      '9461875185',
      '3868420320',
      '6317626030',
      '6317753024',
      '6317799911',
      '6317641986',
      '9051594674',
      '9461879245',
      '9089416609',
      '1909217794',
      '3868420274',
      '6317682054',
      '1847111564',
      '6305428506',
      '1573624101',
      '6317771081',
      '6317699771',
      '6305310963',
      '6316931395',
      '1908079053',
      '6305225818',
      '6305641587',
      '1594394814',
      '6305459541',
      '6305323593',
      '9051595093',
      '6305342784',
      '3865386059',
      '6095016908',
      '6304498969',
      '8364361155',
      '1573301604',
      '6305505780',
      'B018U1FSPW',
      '8393884950',
      '1844144321',
      '1565856783',
      '9802181439',
      '1573306983',
      '6305750467',
      '6305922756',
      '6305433925',
      '6317701202',
      '1849385483',
      '6305610460',
    ]

    const result2 = await collection.updateMany(
      { ASIN: { $in: asinsToSetN } },
      { $set: { To_Be_Scraped: 'Y' } },
    )
    console.log(
      `Updated To_Be_Scraped to 'Y' for ${result2.modifiedCount} documents`,
    )
    const countY = await collection.countDocuments({ To_Be_Scraped: 'Y' })
    console.log(`Total documents with To_Be_Scraped = 'Y': ${countY}`)
  } catch (error) {
    console.error('Error:', error)
  } finally {
    await client.close()
    console.log('Disconnected from MongoDB')
  }
}

main().catch(console.error)
